name: Build and Push Container to ECR

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  AWS_REGION: ca-central-1
  GITHUB_SHA: ${{ github.sha }}
  REGISTRY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/security-tools

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            cloud_asset_inventory/cartography: 'images/cloud_asset_inventory/cartography/**'
            cloud_asset_inventory/sentinel_neo4j_forwarder: 'images/cloud_asset_inventory/sentinel_neo4j_forwarder/**'

  build-push-and-deploy:
    if: needs.changes.outputs.images != '[]'
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/gh_admin_role
          role-session-name: ECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Retrieve Sentinel connector layer
        if: ${{ matrix.image == 'cloud_asset_inventory/sentinel_neo4j_forwarder' }}
        working-directory: ./images/${{ matrix.image }}
        run: |
          aws lambda get-layer-version-by-arn \
          --region ca-central-1 \
          --arn arn:aws:lambda:ca-central-1:283582579564:layer:aws-sentinel-connector-layer:6 \
          | jq -r '.Content.Location' \
          | xargs curl -o connector.zip    

      - name: Build container
        working-directory: ./images/${{ matrix.image }}
        run: |
          docker build \
          --build-arg git_sha=$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:latest .

      - name: Push containers to ECR
        run: |
          docker push $REGISTRY/${{ matrix.image }}:$GITHUB_SHA
          docker push $REGISTRY/${{ matrix.image }}:latest

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}